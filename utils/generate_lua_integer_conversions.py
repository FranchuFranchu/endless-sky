#!python3

lua_to_cpp_file = open("source/lua/autogenerated/LuaToObjectFragment.h", "w")
cpp_to_lua_file = open("source/lua/autogenerated/ObjectToLuaFragment.h", "w")

LUA_TO_CPP_FORMAT = """
if (basicType == typeid({type}).hash_code())
    *reinterpret_cast<{type}*>(pointer) = lua_tonumber(L, -1);
""".lstrip('\n')

CPP_TO_LUA_FORMAT = """
if (basicType == typeid({type}).hash_code())
    lua_pushnumber(L, *reinterpret_cast<{type}*>(pointer));
""".lstrip('\n')

def main():
    lua_to_cpp_file.write("// Generated from utils/generate_lua_integer_conversions.py\n")
    cpp_to_lua_file.write("// Generated from utils/generate_lua_integer_conversions.py\n")

    types = ("double", "float", 
        "uint8_t", "uint16_t", "uint32_t", "uint64_t", 
        "int8_t", "int16_t", "int32_t", "int64_t", 
        )
    
    first = True
    for i in types:
        if not first:
            cpp_to_lua_file.write("else ")
            lua_to_cpp_file.write("else ")
        cpp_to_lua_file.write(CPP_TO_LUA_FORMAT.format(type=i))
        lua_to_cpp_file.write(LUA_TO_CPP_FORMAT.format(type=i))
        first = False
    
try:
    main()
except:
    raise
finally:
    lua_to_cpp_file.close()
    cpp_to_lua_file.close()
    
